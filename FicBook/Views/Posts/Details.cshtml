@model FicBook.Models.Post
@inject UserManager<ApplicationUser> UserManager
@using FicBook.Data
@inject ApplicationDbContext _context
@{
    ViewData["Title"] = Model.Title;

}
<br />
<br />
<div class="article-page container">
    <div  class="col-md-8 article-details">
        @{
            var img = _context.Posts.SingleOrDefault(a => a.Id == a.ParentId);
            <div align="center"> <img src="@img.Picture"  /></div>
        }
        @Html.Partial("_PostSummary", Model)
        <div align="center"><strong>@Model.Title</strong></div>
        <hr />
        <markdown source="@Model.Content"></markdown>
    </div>

    <div class="col-md-4">
        <div class="container-fluid sidebar">
           @if (User.IsInRole("Admin")||Model.Author.Id==UserManager.GetUserId(User)) 
              
           {
               <div class="row">
                <div class="btn-group">
                    <a asp-action="AddChapter"asp-route-Id="@Model.Id" class="btn btn-primary">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true" ></span> Write a new chapter
                    </a>
                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a asp-action="Edit"asp-route-id="@Model.Id">Edit current chapter</a></li>
                        <li><a asp-action="Delete" asp-route-id="@Model.Id">Delete</a></li>
                        <li><a asp-action="DownloadPdf" asp-route-id="@Model.ParentId">Download pdf</a></li>
                    </ul>
                </div>
            </div>
           }
            <div class="row">
                @await Component.InvokeAsync("LatestPosts", new { howMany = 3 })
                <div>
                    @{ int counter = 0;}
                    @foreach (var chapters in _context.Posts.Where(a=>a.ParentId.Trim().Equals(Model.ParentId.Trim())).OrderBy(a => a.CreatedDate))
                    {
                        counter++;
                            <a asp-action="Details" asp-route-id="@chapters.Id"><strong>Go to chapter nuber @counter :</strong> @chapters.Title </a>
                            <br />
                        
                    }
                    <br />
                    <a asp-action="Index">Back to List</a>
                </div>
            </div>
        </div>
    </div>
  
    
    <div class="col-md-8 article-details">
    
        @Html.Partial("_Comments", Model)
       
    </div>
        
</div>